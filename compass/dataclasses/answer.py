"""Answer dataclass for Compass."""

from dataclasses import dataclass, field
from typing import Dict, Any, List, Optional

from compass.dataclasses.document import Document


@dataclass
class Answer:
    """
    The Answer class represents a generated answer from a model.
    
    It contains the answer text and optionally documents that were used to generate the answer.
    """
    
    answer: str
    """The answer text generated by a model."""
    
    documents: List[Document] = field(default_factory=list)
    """The documents that were used to generate the answer."""
    
    meta: Dict[str, Any] = field(default_factory=dict)
    """Additional metadata about the answer generation process."""
    
    score: Optional[float] = None
    """Confidence score for the answer if available."""
    
    def to_dict(self) -> Dict[str, Any]:
        """Convert the answer to a dictionary."""
        return {
            "answer": self.answer,
            "documents": [doc.to_dict() for doc in self.documents],
            "meta": self.meta,
            "score": self.score,
        }